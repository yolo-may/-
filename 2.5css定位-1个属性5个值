# 1. position
**absolute、fixed、relative都需要用rtbf设置，否则不会根据要求定位。
## absolute：
- 脱离文档流（拿出来，插入到其他地方，空缺会被后面的元素填上），不占据空间，破坏布局空间。
- 通过 top,bottom,left,right 定位。
- 定位的起始位置选取其`最近一个`已经`有定位设置`的`父级`-`除了static！`对象进行绝对定位，如果对象的父级`没有设置定位属性`,`或者是static`，absolute元素将以`body文档本身`进行定位，
- 必须要有tblr值，否则定位也不会跟着父级元素走。而是按顺序走。
- 可以通过z-index进行层次分级。
## fixed：固定位置
- 固定在`浏览器的窗口位置`,和其他任何东西都没有关系。
- fixed 固定定位以后会使其`脱离文档流`，脱离文档流以后就会`漂浮在页面上`、`不会占据空间`，导致以后的元素内容会上移，`会被脱离文档流的元素遮挡`。
## relative： 相对定位
- 对象`不可层叠`、`不脱离文档流`但是`表现区脱离文本流`，`占据空间`但`不破坏空间布局`，参考自身静态位置通过 
- 并且可以通过z-index进行层次分级。
- 相对于自己默认位置根据ltrb的值移动，`可以被当作父元素`。	
## static ：
- 正常页面流
- position属性的默认值。
- 元素位置：根据源码位置由浏览器决定，此时`tbrl和z-index`属性`无效`。
- 元素之间不产生重叠。
## sticky：
- 类似relative和fixed的结合；一些时候是relative定位（定位基点是自身默认位置），另一些时候自动变成fixed定位（定位基点是视口）。
- 不设置tblr，和relative一样。 
- 规则：当页面滚动，父元素开始脱离视口时，部分不可见，效果和fixed一样。

**offsettop，中需要自己和父级position

# 2. 5个属性
## top
## bottom
## right
## left
## z-index
